name: Build MinesGame

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC

permissions:
  contents: write
  actions: read
  checks: write
  pull-requests: write
  packages: write

jobs:
  build:
    name: Build MinesGame
    runs-on: ubuntu-latest
    outputs:
      buildVersion: ${{ steps.build_project.outputs.buildVersion }}
      commitID: ${{ env.COMMIT_ID }}

    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - WebGL

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create LFS File List
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS Cache
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: git lfs pull

      - name: Cache Unity Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}
            Library-

      - name: Get Commit ID
        id: get_commit_id
        run: |
          COMMIT_ID=$(git log -1 --pretty=%h)
          echo "COMMIT_ID=${COMMIT_ID}" >> $GITHUB_ENV

      - name: Build Project
        id: build_project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          allowDirtyBuild: true
          versioning: Semantic

      - name: Modify WebGL index.html
        run: |
          INDEX=$(find ./ -name index.html)
          echo "Modifying $INDEX"
          sudo chmod u+w "$INDEX"
          sudo chmod u+w $(dirname "$INDEX")

          sed -i 's/width=960 height=600/width=auto height=auto/' "$INDEX"
          sed -i 's/style="width: 960px; height: 600px;/style="width: 100%; height: 100%;/' "$INDEX"
          sed -i 's/});/});\n      var WAMScore = 0; var getWAMScore = msg => (WAMScore = parseInt(msg), console.log("Win:" + WAMScore));/' "$INDEX"

      - name: List WebGL Output (for debug)
        run: ls -R build/WebGL

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MinesGame_WebGL_${{ steps.build_project.outputs.buildVersion }}_${{ env.COMMIT_ID }}
          path: build/WebGL

  release:
    name: Release MinesGame
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: MinesGame_WebGL_${{ needs.build.outputs.buildVersion }}_${{ needs.build.outputs.commitID }}
          path: build-artifacts/WebGL

      - name: Zip WebGL Build
        run: |
          cd build-artifacts/WebGL
          zip -r MinesGame_WebGL_${{ needs.build.outputs.buildVersion }}_${{ needs.build.outputs.commitID }}.zip .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: MinesGame WebGL ${{ needs.build.outputs.buildVersion }} (${{ needs.build.outputs.commitID }})
          tag_name: WebGL_${{ needs.build.outputs.buildVersion }}_${{ needs.build.outputs.commitID }}
          files: build-artifacts/WebGL/MinesGame_WebGL_${{ needs.build.outputs.buildVersion }}_${{ needs.build.outputs.commitID }}.zip
